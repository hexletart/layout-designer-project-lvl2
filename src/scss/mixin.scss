// HTML
@mixin html($font-type, $serif-type, $font-size, $line-height, $color, $color-bg) {
    html {
        font-family: #{$font-type}, #{$serif-type};
        font-size: #{$font-size};
        line-height: #{$line-height};
        color: #{$color};
        background-color: #{$color-bg};
    }
}

// SECTION
@mixin main-sector-structure {
    .sector-for-main {
        @include flex-column-flex-start-center;
        width: inherit;
        max-width: px-rem(1200px);
        box-sizing: border-box;
    }
}

// FONT
@mixin heading-set($heading-type, $font-size, $line-height, $font-family, $color, $text-transfom: null) {
    @if $text-transfom== "null" {
        #{$heading-type} {
            color: $color;
            font-size: #{$font-size};
            line-height: #{$line-height};
            font-family: "#{$font-family}", sans-serif;
            font-weight: inherit;
        }
    } @else {
        #{$heading-type} {
            color: $color;
            font-size: #{$font-size};
            line-height: #{$line-height};
            font-family: "#{$font-family}", sans-serif;
            text-transform: #{$text-transfom};
            font-weight: inherit;
        }
    }
}

@mixin paragraphs-fixed {
    @each $value in $font-size {
        .p-#{rem-selector-name(#{$value})} {
            font-size: #{$value};
            line-height: 1.5;
        }
    }
}

// PADDING AND MARGIN
@mixin pad-ver($padding-t, $padding-b: null) {
    @if $padding-b == null {
        .pad-ver-#{rem-selector-name(#{$padding-t})} {
            padding-top: #{$padding-t};
            padding-bottom: #{$padding-t};
        }
    } @else {
        .pad-ver-#{rem-selector-name(#{$padding-t})}-#{rem-selector-name(#{$padding-b})} {
            padding-top: #{$padding-t};
            padding-bottom: #{$padding-b};
        }
    }
}

@mixin pad-gor($padding-r, $padding-l: null) {
    @if $padding-l == null {
        .pad-gor-#{rem-selector-name(#{$padding-r})} {
            padding-right: #{$padding-r};
            padding-left: #{$padding-r};
        }
    } @else {
        .pad-gor-#{rem-selector-name(#{$padding-r})}-#{rem-selector-name(#{$padding-l})} {
            padding-right: #{$padding-r};
            padding-left: #{$padding-l};
        }
    }
}

@mixin mar-ver($margin-t, $margin-b: null) {
    @if $margin-b == null {
        .mar-ver-#{rem-selector-name(#{$margin-t})} {
            margin-top: #{$margin-t};
            margin-bottom: #{$margin-t};
        }
    } @else {
        .mar-ver-#{rem-selector-name(#{$margin-t})}-#{rem-selector-name(#{$margin-b})} {
            margin-top: #{$margin-t};
            margin-bottom: #{$margin-b};
        }
    }
}

@mixin mar-gor($margin-r, $margin-l: null) {
    @if $margin-l == null {
        .mar-gor-#{rem-selector-name(#{$margin-r})} {
            margin-right: #{$margin-r};
            margin-left: #{$margin-r};
        }
    } @else {
        .mar-gor-#{rem-selector-name(#{$margin-r})}-#{rem-selector-name(#{$margin-l})} {
            margin-right: #{$margin-r};
            margin-left: #{$margin-l};
        }
    }
}

@mixin mar-side($margin-s, $margin) {
    .mar-#{$margin-s}-#{rem-selector-name(#{$margin})} {
        margin-#{$margin-s}: #{$margin};
    }
}

@mixin pad-side($padding-s, $padding) {
    .pad-#{$padding-s}-#{rem-selector-name(#{$padding})} {
        padding-#{$padding-s}: #{$padding};
    }
}

// WIDTH AND HEIGHT
@mixin width($width, $min-max: null) {
    @if $min-max == null {
        .w-#{rem-selector-name(#{$width})} {
            width: #{$width};
        }
    } @else {
        .#{$min-max}-w-#{rem-selector-name(#{$width})} {
            #{$min-max}-width: #{$width};
        }
    }
}

@mixin height($height, $min-max: null) {
    @if $min-max == null {
        .h-#{rem-selector-name(#{$height})} {
            height: #{$height};
        }
    } @else {
        .#{$min-max}-h-#{rem-selector-name(#{$height})} {
            #{$min-max}-height: #{$height};
        }
    }
}

@mixin width-height($width, $height: null) {
    @if $height == null {
        .wh-#{rem-selector-name(#{$width})} {
            width: #{$width};
            height: #{$width};
        }
    } @else {
        .wh-#{rem-selector-name(#{$width})}-#{rem-selector-name(#{$height})} {
            width: #{$width};
            height: #{$height};
        }
    }
}

// FLEX-MIXIN
// row
@mixin flex {
    display: flex;
}

@mixin flex-row {
    display: flex;
    flex-direction: row;
}

@mixin flex-row-flex-start {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
}

@mixin flex-row-flex-start-stretch {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: stretch;
}

@mixin flex-row-flex-start-flex-start {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
}

@mixin flex-row-flex-start-center {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
}

@mixin flex-row-flex-start-flex-end {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-end;
}

@mixin flex-row-center-stretch {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: stretch;
}

@mixin flex-row-center-flex-start {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-start;
}

@mixin flex-row-center-center {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

@mixin flex-row-center-flex-end {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-end;
}

@mixin flex-row-flex-end-stretch {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: stretch;
}

@mixin flex-row-flex-end-flex-start {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: flex-start;
}

@mixin flex-row-flex-end-center {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
}

@mixin flex-row-flex-end-flex-end {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: flex-end;
}

@mixin flex-row-space-between-stretch {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: stretch;
}

@mixin flex-row-space-between-flex-start {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
}

@mixin flex-row-space-between-center {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-row-space-between-flex-end {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
}

@mixin flex-row-space-around-stretch {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: stretch;
}

@mixin flex-row-space-around-flex-start {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: flex-start;
}

@mixin flex-row-space-around-center {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-row-space-around-flex-end {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
}

@mixin flex-row-space-evenly-stretch {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: stretch;
}

@mixin flex-row-space-evenly-flex-start {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: flex-start;
}

@mixin flex-row-space-evenly-center {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-row-space-evenly-flex-end {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
}

// column
@mixin flex-column {
    display: flex;
    flex-direction: column;
}

@mixin flex-column-flex-start {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

@mixin flex-column-flex-start-stretch {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;
}

@mixin flex-column-flex-start-flex-start {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
}

@mixin flex-column-flex-start-center {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
}

@mixin flex-column-flex-start-flex-end {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-end;
}

@mixin flex-column-center-stretch {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
}

@mixin flex-column-center-flex-start {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
}

@mixin flex-column-center-center {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

@mixin flex-column-center-flex-end {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
}

@mixin flex-column-flex-end-stretch {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: stretch;
}

@mixin flex-column-flex-end-flex-start {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
}

@mixin flex-column-flex-end-center {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
}

@mixin flex-column-flex-end-flex-end {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-end;
}

@mixin flex-column-space-between-stretch {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: stretch;
}

@mixin flex-column-space-between-flex-start {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
}

@mixin flex-column-space-between-center {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-column-space-between-flex-end {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-end;
}

@mixin flex-column-space-around-stretch {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: stretch;
}

@mixin flex-column-space-around-flex-start {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: flex-start;
}

@mixin flex-column-space-around-center {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-column-space-around-flex-end {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-end;
}

@mixin flex-column-space-evenly-stretch {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: stretch;
}

@mixin flex-column-space-evenly-flex-start {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: flex-start;
}

@mixin flex-column-space-evenly-center {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-column-space-evenly-flex-end {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-end;
}

// BG
@mixin bg-positioning {
    top: 0;
    left: 0;
    right: 0;

    width: 100%;
    height: 100%;
    margin: 0 auto;
}

// GRID-MIXIN
// row
@mixin grid-rows-repeat-gap($rows-amount, $rows-value, $row-gap: null) {
    @if $row-gap == null {
        display: grid;
        grid-template-rows: repeat($rows-amount, #{$rows-value});
    } @else {
        display: grid;
        grid-template-rows: repeat($rows-amount, #{$rows-value});
        grid-row-gap: #{$row-gap};
    }
}

@mixin grid-rows-certain-gap($rows, $row-gap: null) {
    @if $row-gap == null {
        display: grid;
        grid-template-rows: #{$rows};
    } @else {
        display: grid;
        grid-template-rows: #{$rows};
        grid-row-gap: #{$row-gap};
    }
}

// column
@mixin grid-columns-repeat-gap($columns-amount, $columns-value, $column-gap: null) {
    @if $column-gap == null {
        display: grid;
        grid-template-columns: repeat($columns-amount, #{$columns-value});
    } @else {
        display: grid;
        grid-template-columns: repeat($columns-amount, #{$columns-value});
        grid-column-gap: #{$column-gap};
    }
}

@mixin grid-columns-certain-gap($columns, $column-gap: null) {
    @if $column-gap == null {
        display: grid;
        grid-template-columns: #{$columns};
    } @else {
        display: grid;
        grid-template-columns: #{$columns};
        grid-column-gap: #{$column-gap};
    }
}

// both
@mixin grid-rows-columns-repeat-gap($rows-amount, $rows-value, $columns-amount, $columns-value, $grid-gap: null) {
    @if $grid-gap == null {
        display: grid;
        grid-template-rows: repeat($rows-amount, #{$rows-value});
        grid-template-columns: repeat($columns-amount, #{$columns-value});
    } @else {
        display: grid;
        grid-template-rows: repeat($rows-amount, #{$rows-value});
        grid-template-columns: repeat($columns-amount, #{$columns-value});
        grid-gap: #{$grid-gap};
    }
}

@mixin grid-rows-columns-certain-gap($rows, $columns, $grid-gap: null) {
    @if $grid-gap == null {
        display: grid;
        grid-template-rows: #{$rows};
        grid-template-columns: #{$columns};
    } @else {
        display: grid;
        grid-template-rows: #{$rows};
        grid-template-columns: #{$columns};
        grid-gap: #{$grid-gap};
    }
}
